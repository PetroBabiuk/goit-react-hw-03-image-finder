{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","App.js","index.js"],"names":["Searchbar","state","inputValue","handleInputChange","e","setState","currentTarget","value","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","id","webformatURL","src","alt","ImageGallery","images","map","image","Button","onClick","App","query","page","keyid","button","status","getQuery","handleLoadMore","prevState","prevProps","fetch","then","response","ok","json","Promise","reject","Error","console","log","totalHits","hits","catch","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","color","height","width","message","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c18e25d.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { toast } from 'react-toastify';\n\nclass Searchbar extends Component {\n    state = {\n        inputValue: '',\n    };\n\n    handleInputChange = e => {\n        this.setState({ inputValue: e.currentTarget.value });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        if (this.state.inputValue.trim() === '') {\n          return toast.error('Please do not use empty string, you have to write something');\n        }\n\n        this.props.onSubmit(this.state.inputValue);\n        this.setState({ inputValue: '' });\n    };\n\n    \n    render() {\n        return (\n            <header className=\"Searchbar\">\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n                    <button type=\"submit\" className=\"SearchForm-button\">\n                        <span className=\"SearchForm-button-label\">Search</span>\n                    </button>\n\n                    <input\n                        className=\"SearchForm-input\"\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        value={this.state.inputValue}\n                        onChange={this.handleInputChange}\n                        />\n                </form>\n            </header>\n        );\n    };\n};\n\nexport default Searchbar;","import PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ id, webformatURL }) => (\n    <li className=\"ImageGalleryItem\">\n        <img src={webformatURL} alt={id} className=\"ImageGalleryItem-image\" />\n    </li>\n);\n\nImageGalleryItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    webformatURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nconst ImageGallery = ({ images }) => (\n    <ul className=\"ImageGallery\">\n        {images.map(image => (\n            <ImageGalleryItem\n                key={image.id}\n                id={image.id}\n                // largeImageURL={image.largeImageURL}\n                webformatURL={image.webformatURL}\n            />\n        ))}\n    </ul>\n);\n\nImageGallery.propTypes = {\n    images: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ImageGallery;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => (\n    <button className=\"Button\" onClick={onClick}>Load more</button>\n);\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;","import React, {Component} from 'react';\n// import shortid from 'shortid';\nimport { ToastContainer } from 'react-toastify';\nimport './App.css';\nimport Searchbar from './components/Searchbar';\n// import SearchForm from './components/SearchForm';\nimport ImageGallery from './components/ImageGallery';\nimport Loader from \"react-loader-spinner\";\nimport Button from 'components/Button';\n// import ContactList from './components/ContactList';\n\nclass App extends Component {\n  static propTypes = {};\n\n  state = {\n    query: '',\n    page: 1,\n    keyid: '22394687-5b263f11c9e1c3bf9700990e1',\n    button: true,\n    status: 'idle',\n    // url: `https://pixabay.com/api/?q=${this.state.query}&page=${this.state.page}&key=${this.state.keyid}&image_type=photo&orientation=horizontal&per_page=12`,\n  };\n\n  getQuery = query => {\n    this.setState({ query });\n  }\n\n  handleLoadMore = (e) => {\n    this.setState((prevState) => {\n      return {\n        page: prevState.page + 1,\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.query;\n    const nextQuery = this.state.query;\n    if (prevQuery !== nextQuery) {\n      this.setState({ status: 'pending' });\n      fetch(`https://pixabay.com/api/?q=${this.state.query}&page=${this.state.page}&key=${this.state.keyid}&image_type=photo&orientation=horizontal&per_page=12`)\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          return Promise.reject(new Error(`Something was wrong, please reload the page`));\n        })\n        .then(images => {\n          console.log(images);\n          if (images.totalHits === 0) {\n            return Promise.reject(new Error(`Nothing with name ${this.state.query} was not found`));\n          }\n            this.setState({ images: images.hits, status: 'resolved'});\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }))\n    }\n  }\n\n  render() {\n    const { images, error, status, button } = this.state;\n\n    if (status === 'idle') {\n      return (\n        <div>\n          <Searchbar onSubmit={this.getQuery} />\n          <h1>Please enter something in input</h1>\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={3000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </div>\n      );\n    }\n\n    if (status === 'pending') {\n      return (\n        <div>\n          <Searchbar onSubmit={this.getQuery} />\n          <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={280}\n        width={280}\n      // timeout={3000} //3 secs\n        />\n        </div>\n        \n      );\n    }\n\n    if (status === 'rejected') {\n      return (\n        <div>\n          <Searchbar onSubmit={this.getQuery} />\n          <h1>{error.message}</h1>\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={3000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </div>);\n    }\n\n    if (status === 'resolved') {\n      return (\n        <div>\n          <Searchbar onSubmit={this.getQuery} />\n          <ImageGallery images={images} />\n          {button && <Button\n            onClick={this.handleLoadMore}\n          />}\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={3000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </div>);\n    }\n\n\n    return (\n      <div>\n        { button && <Button\n          onClick={this.handleLoadMore}\n        />}\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n        />\n      </div>\n        \n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}